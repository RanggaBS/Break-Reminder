# ---------------------------------------------------------------------------- #
# Format configuration for StyLua code formatter extension                     #
# https://github.com/JohnnyMorganz/StyLua?tab=readme-ov-file#options           #
# ---------------------------------------------------------------------------- #

# ---------------------------------------------------------------------------- #
# Specify a disambiguation for the style of Lua syntax being formatted.        #
#                                                                              #
# Possible options: "All" (default), "Lua51", "Lua52", "Lua53", "Lua54",       #
# "LuaJIT", "Luau"                                                             #
# ---------------------------------------------------------------------------- #

# Error? What? Why?
# unknown field `syntax`, expected one of `column_width`, `line_endings`, `indent_type`, `indent_width`, `quote_style`, `no_call_parentheses`, `call_parentheses`, `collapse_simple_statement`, `sort_requires`
# syntax = "Lua51"

# ---------------------------------------------------------------------------- #
# Approximate line length for printing.                                        #
#                                                                              #
# Used as a guide for line wrapping - this is not a hard requirement:          #
# lines may fall under or over the limit.                                      #
# ---------------------------------------------------------------------------- #

column_width = 80

# ---------------------------------------------------------------------------- #
# Line endings type.                                                           #
#                                                                              #
# Possible options: "Unix" (LF) or "Windows" (CRLF)                            #
# ---------------------------------------------------------------------------- #

line_endings = "Unix"

# ---------------------------------------------------------------------------- #
# Indent type.                                                                 #
#                                                                              #
# Possible options: "Tabs" or "Spaces"                                         #
# ---------------------------------------------------------------------------- #

indent_type = "Spaces"

# ---------------------------------------------------------------------------- #
# Character size of single indentation.                                        #
#                                                                              #
# If "indent_type" is set to Tabs, this option is used as a heuristic to       #
# determine column width only.                                                 #
# ---------------------------------------------------------------------------- #

indent_width = 2

# ---------------------------------------------------------------------------- #
# Quote style for string literals.                                             #
#                                                                              #
# Possible options: "AutoPreferDouble", "AutoPreferSingle", "ForceDouble",     #
# "ForceSingle".                                                               #
#                                                                              #
# "AutoPrefer" styles will prefer the specified quote style, but fall back to  #
# the alternative if it has fewer string escapes.                              #
#                                                                              #
# "Force" styles always use the specified style regardless of escapes.         #
# ---------------------------------------------------------------------------- #

quote_style = "AutoPreferSingle"

# ---------------------------------------------------------------------------- #
# Whether parentheses should be applied on function calls with a single        #
# string/table argument.                                                       #
#                                                                              #
# Possible options: "Always", "NoSingleString", "NoSingleTable", "None",       #
# "Input".                                                                     #
#                                                                              #
# Always applies parentheses in all cases.                                     #
#                                                                              #
# NoSingleString omits parentheses on calls with a single string argument.     #
#                                                                              #
# Similarly, "NoSingleTable" omits parentheses on calls with a single table    #
# argument.                                                                    #
#                                                                              #
# None omits parentheses in both cases.                                        #
#                                                                              #
# Note: parentheses are still kept in situations where removal can lead to     #
# obscurity (e.g. foo "bar".setup -> foo("bar").setup, since the index is on   #
# the call result, not the string).                                            #
#                                                                              #
# Input removes all automation and preserves parentheses only if they were     #
# present in input code: consistency is not enforced.                          #
# ---------------------------------------------------------------------------- #

call_parentheses = "Always"

# ---------------------------------------------------------------------------- #
# Specify whether to collapse simple statements.                               #
#                                                                              #
# Possible options: "Never", "FunctionOnly", "ConditionalOnly", or "Always"    #
# ---------------------------------------------------------------------------- #

collapse_simple_statement = "ConditionalOnly"

# ---------------------------------------------------------------------------- #
# Specify whether to add a space between the function name and parentheses.    #
#                                                                              #
# Possible options: "Never", "Definitions", "Calls", or "Always"               #
# ---------------------------------------------------------------------------- #

space_after_function_names = "Never"

# ---------------------------------------------------------------------------- #
# StyLua has built-in support for sorting require statements.                  #

# We group consecutive require statements into a single "block", and then      #
# requires are sorted only within that block. Blocks of requires do not move   #
# around the file.                                                             #
#                                                                              #
# StyLua only considers requires of the form `local NAME = require(EXPR)`,     #
# and sorts lexicographically based on NAME.                                   #
#                                                                              #
# (StyLua can also sort Roblox services of the form                            #
# `local NAME = game:GetService(EXPR))`                                        #
#                                                                              #
# Requires sorting is off by default.                                          #
# ---------------------------------------------------------------------------- #

[sort_requires]
enabled = false
